1.何为MVVM框架

2.SPA（单页面应用）和（MPA）多页面应用的区别
单页面应用：用户在浏览器加载单一的HTML页面，后续请求都无需再离开此页
目标：旨在为用户提供了更接近本地移动APP或桌面应用程序的体验
流程：第一次请求时，将导航页传输到客户端，其余请求通过REST API获取JSON数据
实现：数据的传输通过Web Socket API 或 RPC（远程过程调用）
优点：用户体验流程，服务器压力小，前后端职责分离
缺点：关键词布局难度加大，不利于SEO（？）

3.前端路由
a.前端路由通过URL和History来实现页面切换
b.应用：主要适用于“前后端分离”的单页面（SPA）项目
c.优点：用户体验好，交互流畅
d.缺点：浏览器“前进”、“后退”会重新请求，无法合理利用缓存
a.不同框架的使用方法
b.应用原理

4.node.js? common.js? require.js? sea.js

5.模块化开发
AMD CMD

6.node.js 和 npm之间的关系
npm是node.js的模块管理和发布工具

7.脚本运行在浏览器还是node环境中

8.WebKit是什么
WebKit是一个开源的浏览器内核，由渲染引擎（WebCore）和JS解释引擎（JSCore）组成

9.前端代码单元测试

10.前端模板引擎？

11.依赖注入
概念：当一个类的实例依赖另一个类的实例时，自己不创建该实例，由IOC容器创建并注入
依赖注入解决的就是如何有效组织代码依赖模块的问题

12.前端工程化开发流程
a.项目初始化：yeoman, FIS
b.引入依赖包：bower, npm
c.模块化管理：npm, browserify, Webpack
d.代码编译：babel, sass, less
e.代码优化(压缩/合并)：Gulp, Grunt
f.代码检查：JSHint, ESLint
g.代码测试：Mocha

13.Angular（新版本）和AngularJS（老版本）之间的关系？
Angular1是典型的MVC架构
Angualr2是基于组件的架构（基本是推到重来）
Angular2 与 Angular1.x完全不同，最基本的语法都不一样，Angular1.x是基于javascript,
而Angualr2是基于TypeScript的框架





































